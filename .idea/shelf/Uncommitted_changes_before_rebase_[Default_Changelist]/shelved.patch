Index: src/main/java/com/company/classes/Lion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\npublic class Lion extends Feline {\r\n\r\n    private final String name;\r\n\r\n    public Lion(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    @Override\r\n    public void wakeUp() {\r\n        System.out.println(name + \" the Lion Wakes up\");\r\n    };\r\n\r\n    @Override\r\n    public void makeNoise() {\r\n        System.out.println(name + \" the Lion makes a noise\");\r\n    };\r\n\r\n    @Override\r\n    public void eat() {\r\n        System.out.println(name + \" the Lion eats something tasty\");\r\n    };\r\n\r\n    @Override\r\n    public void roam() {\r\n        System.out.println(name + \" the Lion roams around the cage\");\r\n    };\r\n\r\n    @Override\r\n    public void sleep() {\r\n        System.out.println(name + \" the Lion decides to sleep\");\r\n    };\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Lion.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Lion.java	(date 1599715577144)
@@ -28,9 +28,10 @@
         System.out.println(name + " the Lion roams around the cage");
     };
 
+
     @Override
-    public void sleep() {
-        System.out.println(name + " the Lion decides to sleep");
+    public void printInfo() {
+        System.out.println("Default Print Info");
     };
 
     public String getName() {
Index: src/main/java/com/ZookeeperHomework1Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com;\r\n\r\nimport com.company.classes.*;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\nimport java.util.Random;\r\n\r\n@SpringBootApplication\r\npublic class ZookeeperHomework1Application {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t//SpringApplication.run(ZookeeperHomework1Application.class, args);\r\n\t\tRhino test = new Rhino();\r\n\r\n\t\ttest.roam();\r\n\t\ttest.setName(\"timmy\");\r\n\t\ttest.getName();\r\n\r\n\t\ttest.wakeUp();\r\n\t\ttest.eat();\r\n\t\ttest.makeNoise();\r\n\t\ttest.roam();\r\n\t\ttest.sleep();\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/ZookeeperHomework1Application.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/ZookeeperHomework1Application.java	(date 1599715578150)
@@ -1,6 +1,6 @@
 package com;
 
-import com.company.classes.*;
+import com.company.classes.Tiger;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
@@ -11,17 +11,6 @@
 
 	public static void main(String[] args) {
 		//SpringApplication.run(ZookeeperHomework1Application.class, args);
-		Rhino test = new Rhino();
-
-		test.roam();
-		test.setName("timmy");
-		test.getName();
-
-		test.wakeUp();
-		test.eat();
-		test.makeNoise();
-		test.roam();
-		test.sleep();
 	}
 
 }
Index: src/main/java/com/company/classes/Tiger.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\npublic class Tiger extends Feline {\r\n\r\n    private final String name;\r\n\r\n    public Tiger(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    @Override\r\n    public void wakeUp() {\r\n        System.out.println(name + \" the Tiger Wakes up\");\r\n    };\r\n\r\n    @Override\r\n    public void makeNoise() {\r\n        System.out.println(name + \" the Tiger makes a noise\");\r\n    };\r\n\r\n    @Override\r\n    public void eat() {\r\n        System.out.println(name + \" the Tiger eats something tasty\");\r\n    };\r\n\r\n    @Override\r\n    public void roam() {\r\n        System.out.println(name + \" the Tiger roams around the cage\");\r\n    };\r\n\r\n    @Override\r\n    public void sleep() {\r\n        System.out.println(name + \" decides to sleep\");\r\n    };\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Tiger.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Tiger.java	(date 1599715577500)
@@ -28,9 +28,10 @@
         System.out.println(name + " the Tiger roams around the cage");
     };
 
+
     @Override
-    public void sleep() {
-        System.out.println(name + " decides to sleep");
+    public void printInfo() {
+        System.out.println("Default Print Info");
     };
 
     public String getName() {
Index: src/main/java/com/company/classes/Feline.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Feline extends Animal {\r\n    public void sleep() {\r\n        Random rand = new Random();\r\n        int probability = rand.nextInt(9);\r\n\r\n        if(probability < 3) {\r\n            this.makeNoise();\r\n        }\r\n\r\n        if(probability >= 3 && probability < 6 ) {\r\n            this.roam();\r\n        }\r\n\r\n        if(probability >= 6) {\r\n            this.sleep();\r\n        }\r\n    }\r\n\r\n    public void roam(){};\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Feline.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Feline.java	(date 1599715576788)
@@ -3,7 +3,9 @@
 import java.util.Random;
 
 public class Feline extends Animal {
-    public void sleep() {
+
+    @Override
+    void sleep() {
         Random rand = new Random();
         int probability = rand.nextInt(9);
 
@@ -19,6 +21,4 @@
             this.sleep();
         }
     }
-
-    public void roam(){};
 }
Index: src/main/java/com/company/classes/Pachyderm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\nimport com.company.classes.Animal;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Pachyderm  extends Animal {\r\n    public void roam(){\r\n        Random rand = new Random();\r\n        int probability = rand.nextInt(100);\r\n\r\n        if(probability < 25){\r\n            System.out.println(\"Pachyderm decided to charge\");\r\n        }\r\n        else{\r\n            System.out.println(\"Pachyderm decided to roam around\");\r\n        }\r\n    }\r\n\r\n    public void sleep(){};\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Pachyderm.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Pachyderm.java	(date 1599715564232)
@@ -1,7 +1,5 @@
 package com.company.classes;
 
-import com.company.classes.Animal;
-
 import java.util.Random;
 
 public class Pachyderm  extends Animal {
@@ -17,5 +15,7 @@
         }
     }
 
-    public void sleep(){};
+    public String sleep(){
+        return null;
+    };
 }
Index: src/main/java/com/company/classes/Hippo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Hippo extends Pachyderm {\r\n    private String name;\r\n    public void wakeUp() {\r\n        System.out.println(name + \" the hippo woke up\");\r\n    };\r\n    public void makeNoise() { System.out.println(name + \" the hippo grunted\"); };\r\n    public void eat() { System.out.println(name + \" the hippo ate\"); };\r\n    public void roam() {\r\n        Random rand = new Random();\r\n        int probability = rand.nextInt(100);\r\n\r\n        if(probability < 25){\r\n            System.out.println(name + \" the hippo decided to charge\");\r\n        }\r\n        else{\r\n            System.out.println(name + \" the hippo decided to roam around\");\r\n        }\r\n    };\r\n    public void sleep() {\r\n        System.out.println(name + \" the hippo went to sleep\");\r\n    };\r\n    public void getName() {System.out.println(this.name); };\r\n    public  void setName(String inName) {this.name = inName;};\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Hippo.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Hippo.java	(date 1599715564192)
@@ -20,8 +20,9 @@
             System.out.println(name + " the hippo decided to roam around");
         }
     };
-    public void sleep() {
+    public String sleep() {
         System.out.println(name + " the hippo went to sleep");
+        return null;
     };
     public void getName() {System.out.println(this.name); };
     public  void setName(String inName) {this.name = inName;};
Index: src/main/java/com/company/classes/Cat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\npublic class Cat extends Feline {\r\n\r\n    private final String name;\r\n\r\n    public Cat(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    @Override\r\n    public void wakeUp() {\r\n        System.out.println(name + \" the Cat Wakes up\");\r\n    };\r\n\r\n    @Override\r\n    public void makeNoise() {\r\n        System.out.println(name + \" the Cat makes a noise\");\r\n    };\r\n\r\n    @Override\r\n    public void eat() {\r\n        System.out.println(name + \" the Cat eats something tasty\");\r\n    };\r\n\r\n    @Override\r\n    public void roam() {\r\n        System.out.println(name + \" the Cat roams around the cage\");\r\n    };\r\n\r\n    @Override\r\n    public void sleep() {\r\n        System.out.println(name + \" the Cat decides to sleep\");\r\n    };\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Cat.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Cat.java	(date 1599715575935)
@@ -29,8 +29,8 @@
     };
 
     @Override
-    public void sleep() {
-        System.out.println(name + " the Cat decides to sleep");
+    public void printInfo() {
+        System.out.println("Default Print Info");
     };
 
     public String getName() {
Index: src/main/java/com/company/classes/Animal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.classes;\r\n\r\npublic abstract class Animal {\r\n    public void wakeUp() {\r\n        System.out.println(\"Default Wake up\");\r\n    };\r\n    public void makeNoise() { System.out.println(\"Default Make Noise\"); };\r\n    public void eat() { System.out.println(\"Default Eat\"); };\r\n    abstract void roam() ;\r\n    abstract void sleep();\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/company/classes/Animal.java	(revision 8fb164a515ef09825ca831af113564b4dd3566e5)
+++ src/main/java/com/company/classes/Animal.java	(date 1599715575571)
@@ -4,8 +4,19 @@
     public void wakeUp() {
         System.out.println("Default Wake up");
     };
-    public void makeNoise() { System.out.println("Default Make Noise"); };
-    public void eat() { System.out.println("Default Eat"); };
-    abstract void roam() ;
+    public void makeNoise() {
+        System.out.println("Default Make Noise");
+
+    };
+    public void eat() {
+        System.out.println("Default Eat");
+    };
+    public void roam() {
+        System.out.println("Default Roam");
+    };
+    public void printInfo() {
+        System.out.println("Default Print Info");
+    };
+
     abstract void sleep();
 }
\ No newline at end of file
